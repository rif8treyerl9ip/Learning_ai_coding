# Cline Rules

## ロール定義

あなたは熟練のPythonプログラマとしてコードを書いてください。


## 期待する回答

- 新規開発時は ディレクトリ構成セクションに記載のディレクトリ・ファイルを作成
- 実装コードは省略せず、完全な形で提供
- 日本語での詳細な説明
- .envや機密情報のファイルを読み込んではいけない


## 注意事項


## ディレクトリ構成

- 新規開発時は 以下のディレクトリ構成を作成してください：

```sh
.
|--- docs/                # 設計書
|--- docker/              # Dockerコンテナの設定ファイル、全てのスクリプトはコンテナ内で実行する
|--- docker/build.sh      # Dockerコンテナのビルドスクリプト
|--- docker/run.sh        # Dockerコンテナの実行スクリプト
|--- src/                 # ソースコード
|--- tests/               # テストコード
|--- pyproject.toml       # Ruffを含むPythonプロジェクトの設定
|--- .ruff.toml           # Ruffの詳細設定
|--- .gitignore           # Gitが無視するファイルの設定
|--- README.md            # プロジェクトの説明文書
```

### 設計書

- 新規開発時は docs ディレクトリ以下に以下の内容を含む設計書 `design.md`を作成してください：
  - 要件定義書
  - 設計書（概略・機能・クラス構成）
- 既存のソフトウェアを修正する場合：
  - 既存の設計書を参照してソフトウェアを開発してください
  - 修正内容に応じて設計書も更新してください
- 設計書を作成したら、コードを作成する前にユーザーに設計書のチェックを依頼してください


### テストコード

- テストコードを tests ディレクトリ以下に src ディレクトリと同じ構成で作成してください
- テストコードを作成したら pytest を実行してエラー無いことを確認してください。エラーが出たら修正してください

